import marshal,zlib,base64
exec(base64.b64decode(base64.b64decode(base64.b64decode(base64.b64decode("")))))